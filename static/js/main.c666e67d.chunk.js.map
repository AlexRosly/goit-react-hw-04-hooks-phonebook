{"version":3,"sources":["components/App/App.styled.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.js","index.js"],"names":["Section","styled","div","FormSection","Forms","form","Label","label","Input","input","Button","button","Form","getValue","useState","name","setName","number","setNumber","setForm","e","currentTarget","value","console","log","resetForm","onSubmit","preventDefault","type","pattern","title","onChange","required","Filter","filter","List","li","Span","span","ContactList","contacts","onDelete","map","contact","onClick","App","id","setContacts","setFilter","useEffect","getLocal","window","localStorage","getItem","JSON","parse","setItem","stringify","visibleContact","normalizeFilter","toLowerCase","includes","getVisibleContact","uuidv4","searchName","messege","alert","contactsName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c666e67d.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.div`\r\nmargin-left: 100px;\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const FormSection = styled.div`\r\nwidth: 500px;\r\nborder: 2px solid black;\r\nborder-radius: 5px;\r\n`;\r\n\r\nexport const Forms = styled.form`\r\npadding : 20px 20px;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nflex-direction: column;\r\n`;\r\n\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nflex-direction: column;\r\nfont-size: 20px;\r\nfont-weight: 500;\r\n\r\n`;\r\n\r\nexport const Input = styled.input`\r\nmargin: 10px 0px;\r\nmargin-bottom: 30px;\r\nfont-size: 20px;\r\nfont-weight: 700;\r\nwidth: 300px;\r\nborder: 2px solid black;\r\n\r\n&:focus {\r\n    outline: 3px solid blue;\r\n    \r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\nfont-size: 14px;\r\nfont-weight: 700;\r\nheight: 40px;\r\nwidth: 200px;\r\nborder-radius: 5px;\r\nbackground-color: #00FF00;\r\n`;","// import React, { Component } from 'react';\r\nimport React, { useState} from 'react';\r\nimport { FormSection, Forms, Input, Button, Label } from './Form.styled'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Form ({getValue}) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const setForm = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setName( value );\r\n                break;\r\n            case 'number':\r\n                setNumber( value );\r\n                break;\r\n            default:\r\n                console.log(\"error\");\r\n        }\r\n\r\n    }\r\n\r\n    const handelSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        getValue({ name, number });\r\n        resetForm();\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n\r\n    return (\r\n                    <FormSection>\r\n            <Forms onSubmit={handelSubmit}>\r\n                <Label>\r\n                Name\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        onChange={setForm}\r\n                        required\r\n                    />\r\n                </Label>\r\n                <Label>\r\n                Number\r\n                    <Input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        onChange={setForm}\r\n                        required\r\n                    />\r\n                </Label>\r\n                <Button type=\"submit\">Add contact</Button>\r\n            </Forms>\r\n    </FormSection >\r\n\r\n    );\r\n}\r\n\r\nForm.propTypes = {\r\n    getValue: PropTypes.func.isRequired,\r\n}\r\n\r\n//Old versions on class before refactoring\r\n// class Form extends Component {\r\n//     state = {\r\n//         contacts: [],\r\n//         name: '',\r\n//         number: ''\r\n//     }\r\n\r\n//     setForm = (e) => {\r\n//         const { name, value } = e.currentTarget;\r\n//         this.setState({\r\n//             [name]: value,\r\n//         })\r\n//     }\r\n\r\n//     handelSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         this.props.getValue(this.state);\r\n//         this.resetForm();\r\n//     }\r\n\r\n//     resetForm = () => {\r\n//         this.setState({name: '', number: ''})\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <FormSection>\r\n//             <Forms onSubmit={this.handelSubmit}>\r\n//                 <Label>\r\n//                 Name\r\n//                     <Input\r\n//                         type=\"text\"\r\n//                         name=\"name\"\r\n//                         value={this.state.name}\r\n//                         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//                         title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//                         onChange={this.setForm}\r\n//                         required\r\n//                     />\r\n//                 </Label>\r\n//                 <Label>\r\n//                 Number\r\n//                     <Input\r\n//                         type=\"tel\"\r\n//                         name=\"number\"\r\n//                         value={this.state.number}\r\n//                         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//                         title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//                         onChange={this.setForm}\r\n//                         required\r\n//                     />\r\n//                 </Label>\r\n//                 <Button type=\"submit\">Add contact</Button>\r\n//             </Forms>\r\n//     </FormSection >\r\n//         )\r\n\r\n//     }\r\n// }\r\n\r\n// export default Form;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nflex-direction: column;\r\nfont-weight: 700;\r\nfont-size: 16px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nmargin: 10px 0px;\r\nmargin-bottom: 30px;\r\nfont-size: 20px;\r\nwidth: 300px;\r\nborder: 2px solid black;\r\n\r\n&:focus {\r\n    outline: 3px solid blue;\r\n}\r\n`;","import React from 'react';\r\nimport { Label, Input } from './Filter.styled';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <Label>\r\n    Find contacts by name\r\n      <Input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n  </Label>\r\n);\r\n\r\nexport default Filter;","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\n`;\r\n\r\nexport const Span = styled.span`\r\nmargin-left: 15px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\nmargin-left: 30px;\r\nfont-size: 14px;\r\nfont-weight: 700;\r\nheight: 20px;\r\nwidth: 100px;\r\nborder-radius: 5px;\r\nbackground-color: red;\r\n`;","import React from 'react';\r\nimport { Button, List, Span } from './ContactList.styled';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n    \r\n    <ul>\r\n        {contacts.map((contact) =>\r\n        (<List key={contact.name}><p>{contact.name}: <Span>{contact.number}</Span></p>\r\n            <Button type=\"button\" onClick={()=> onDelete(contact.name)}>Delete</Button>\r\n        </List>))}\r\n    </ul>\r\n);\r\n\r\nexport default ContactList;","// import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Section } from \"./App.styled\";\nimport Form from \"../Form/Form\";\nimport Filter from \"../Filter/Filter\";\nimport ContactList from \"../ContactList/ContactList\";\nimport React, { useState, useEffect } from \"react\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n  const [filter, setFilter] = useState(\"\");\n  useEffect(() => {\n    const getLocal = window.localStorage.getItem(\"contacts\");\n    setContacts(JSON.parse(getLocal));\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    const searchName = contacts\n      .map((contact) => contact.name)\n      .includes(contact.name);\n\n    const messege = `${contact.name} is already in contacts`;\n    console.log(contact);\n\n    if (searchName) {\n      alert(messege);\n    } else {\n      setContacts((contacts) => [contact, ...contacts]);\n    }\n    console.log(contacts);\n  };\n\n  const deleteContact = (contactsName) => {\n    setContacts(contacts.filter((contact) => contact.name !== contactsName));\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContact = () => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const visibleContact = getVisibleContact();\n\n  return (\n    <Section>\n      <h1>Phonebook</h1>\n      <Form getValue={addContact} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContact} onDelete={deleteContact} />\n    </Section>\n  );\n}\n\n//Old versions on class before refactoring\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem(\"contacts\");\n//     const parseContacts = JSON.parse(contacts);\n\n//     if (parseContacts) {\n//       this.setState({ contacts: parseContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevState, prevProps) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   addContact = ({ name, number }) => {\n//     console.log({ name, number });\n//     const contact = {\n//       id: uuidv4(),\n//       name: name,\n//       number: number,\n//     };\n\n//     const searchName = this.state.contacts\n//       .map((cont) => cont.name)\n//       .includes(contact.name);\n\n//     const messege = `${contact.name} is already in contacts`;\n\n//     if (searchName) {\n//       alert(messege);\n//     } else {\n//       this.setState(({ contacts }) => ({\n//         contacts: [contact, ...contacts],\n//       }));\n//     }\n//   };\n\n//   deleteContact = (contactsName) =>\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.name !== contactsName\n//       ),\n//     }));\n\n//   changeFilter = (e) => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n\n//   getVisibleContact = () => {\n//     const normalizeFilter = this.state.filter.toLowerCase();\n\n//     return this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(normalizeFilter)\n//     );\n//   };\n\n//   render() {\n//     const visibleContact = this.getVisibleContact();\n//     return (\n//       <Section>\n//         <h1>Phonebook</h1>\n//         <Form getValue={this.addContact} />\n//         <h2>Contacts</h2>\n//         <Filter filter={this.state.filter} onChange={this.changeFilter} />\n//         <ContactList contacts={visibleContact} onDelete={this.deleteContact} />\n//       </Section>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}